<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModuleManager</name>
    </assembly>
    <members>
        <member name="T:ModuleManager.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:ModuleManager.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ModuleManager.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:ModuleManager.Behavoirs.BoolToVisibilityConverter">
            <summary>
            BoolToVisibilityConverter converts a Visibility object to a bool value.
            </summary>
        </member>
        <member name="M:ModuleManager.Behavoirs.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts bool to Visibility.
            </summary>
            <param name="value">Object.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Object parameter.</param>
            <param name="culture">Culture Info.</param>
            <returns>True if visibility is visible, false if collapsed.</returns>
        </member>
        <member name="M:ModuleManager.Behavoirs.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Visibility to bool.
            </summary>
            <param name="value">Object to convert.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Object parameter.</param>
            <param name="culture">Culture Info.</param>
            <returns>Visibility.Visible if true and Visibility.Collapsed if false.</returns>
        </member>
        <member name="T:ModuleManager.Behavoirs.TemplateSelector">
            <summary>
            Used to selected a DataTemplate in the view.
            </summary>
        </member>
        <member name="M:ModuleManager.Behavoirs.TemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Used to select the DataTemplate used in the view.
            </summary>
            <param name="item">Object.</param>
            <param name="container">Container.</param>
            <returns>A DataTemplate depending on the object passed in.</returns>
        </member>
        <member name="T:ModuleManager.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml.
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:ModuleManager.MainWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.MainWindow"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.ViewModels.ModuleManagerViewModel">
            <summary>
            ModuleManagerViewModel will handle commands from the main view.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ModuleManagerViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.ViewModels.ModuleManagerViewModel"/> class.
            </summary>
        </member>
        <member name="E:ModuleManager.ViewModels.ModuleManagerViewModel.PropertyChanged">
            <summary>
            PropertyChanged event handler.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.UseSaveFileDialog">
            <summary>
            Gets or sets a value indicating whether SaveFileDialog is used on save settings.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.LoadModulesCommand">
            <summary>
            Gets or sets the LoadModulesCommand as a ModuleManagerICommand.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.SaveConfigCommand">
            <summary>
            Gets or sets the SaveConfigCommand as a ModuleManagerICommand.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.ModuleDirectory">
            <summary>
            Gets or sets the file location as a string.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.InfoRetriever">
            <summary>
            Gets or sets a ModuleInfoRetriever.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.LoadingModules">
            <summary>
            Gets or sets a value indicating whether the application is currently loading modules.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.ProgressBarText">
            <summary>
            Gets or sets the progress bar text.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.CurrentProgress">
            <summary>
            Gets the current progress of the status bar.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.ProgressBarIsVisible">
            <summary>
            Gets or sets a value indicating whether a progress bar is visible.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ModuleManagerViewModel.Modules">
            <summary>
            Gets or sets the collection of Modules.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ModuleManagerViewModel.RaisePropertyChanged(System.String)">
            <summary>
            Raise a property changed event.
            </summary>
            <param name="property">Property passed in as a string.</param>
        </member>
        <member name="M:ModuleManager.ViewModels.ModuleManagerViewModel.StoreModules">
            <summary>
            StoreModules will attempt to get all assemblies from a dll and store it
            as a Module in the Modules collection.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ModuleManagerViewModel.SaveConfig">
            <summary>
            SaveConfig will save an ObservableCollection to an xml file.
            The boolean, UseSaveFileDialog will be tested to see if the
            SaveFileDialog will be used or if the hardcoded file location
            will be used.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ModuleManagerViewModel.LoadConfig">
            <summary>
            LoadConfig will load an ObservableCollection of type Module from an xml file.
            </summary>
            <returns>ObservableCollection of type Module.</returns>
        </member>
        <member name="M:ModuleManager.ViewModels.ModuleManagerViewModel.GetModuleDirectory">
            <summary>
            Gets the directory selected by the user that should contain dll files.
            </summary>
            <returns>String of the directory path.</returns>
        </member>
        <member name="T:ModuleManager.Views.DescriptionView">
            <summary>
            Interaction logic for DescriptionView.xaml
            </summary>
            <summary>
            DescriptionView
            </summary>
        </member>
        <member name="M:ModuleManager.Views.DescriptionView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.DescriptionView"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.DescriptionView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.LoadSaveButtons">
            <summary>
            Interaction logic for LoadSaveButtons.xaml
            </summary>
            <summary>
            LoadSaveButtons
            </summary>
        </member>
        <member name="M:ModuleManager.Views.LoadSaveButtons.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.LoadSaveButtons"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.LoadSaveButtons.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.ModuleView">
            <summary>
            Interaction logic for ModuleView.xaml
            </summary>
            <summary>
            ModuleView
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ModuleView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.ModuleView"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ModuleView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.ProgressBar">
            <summary>
            Interaction logic for ProgressBar.xaml
            </summary>
            <summary>
            ProgressBar
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.ProgressBar"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ProgressBar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
