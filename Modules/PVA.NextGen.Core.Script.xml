<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PVA.NextGen.Core.Script</name>
    </assembly>
    <members>
        <member name="T:PVA.NextGen.Core.Script.Classes.ScriptedFunction">
            <summary>
            A function whose execution behavior is defined in a script file.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Classes.ScriptedFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Script.Classes.ScriptedFunction"/> class.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.ReferenceName">
            <summary>
            Gets or sets the name that should be used internally.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.DisplayName">
            <summary>
            Gets or sets the name which should be displayed in all operator-focused interfaces.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.ExecutableReference">
            <summary>
            Gets or sets the reference to the <see cref="T:PVA.NextGen.Common.Interfaces.IExecutable"/> associated with this <see cref="T:PVA.NextGen.Common.Interfaces.IScriptedProcessStep"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.Inputs">
            <summary>
            Gets or sets the dictionary collection of inputs which should be supplied to this <see cref="T:PVA.NextGen.Common.Interfaces.IFunction"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.Outputs">
            <summary>
            Gets the dictionary collection of outputs which are received from this <see cref="T:PVA.NextGen.Common.Interfaces.IFunction"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.InputTypes">
            <summary>
            Gets or sets the list of input <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.OutputTypes">
            <summary>
            Gets or sets the list of output <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.IsPollable">
            <summary>
            Gets a value indicating whether this <see cref="T:PVA.NextGen.Common.Interfaces.ISharedFunction"/> is one which should be run at a regular interval.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.IsMappable">
            <summary>
            Gets a value indicating whether this <see cref="T:PVA.NextGen.Common.Interfaces.ISharedFunction"/> is one which should be mappable to a virtual or physical button.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.IsProgrammable">
            <summary>
            Gets a value indicating whether this <see cref="T:PVA.NextGen.Common.Interfaces.ISharedFunction"/> is one which should be usable when creating a Program.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.IsExecutable">
            <summary>
            Gets a value indicating whether this <see cref="T:PVA.NextGen.Common.Interfaces.ISharedFunction"/> is one which can run on its own.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.Icon">
            <summary>
            Gets the Icon that should be displayed in all operator-focused interfaces.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.Execute">
            <summary>
            Gets the execution <see cref="T:PVA.NextGen.Common.Delegates.ParamsFunc`1"/> for this <see cref="T:PVA.NextGen.Common.Interfaces.IScriptedFunction"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Classes.ScriptedFunction.Groups">
            <summary>
            Gets list of sorting groups this function belongs to.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Classes.ScriptedFunction.SetExecutable(PVA.NextGen.Common.Interfaces.IExecutable)">
            <summary>
            Set the <see cref="T:PVA.NextGen.Common.Interfaces.IExecutable"/> object on this wrapper class.
            </summary>
            <param name="executable">The <see cref="T:PVA.NextGen.Common.Interfaces.IExecutable"/> object for this wrapper class.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Classes.ScriptedFunction.Compile">
            <summary>
            Compiles the <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> object for use.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Classes.ScriptedFunction.SetVariable(System.String,System.Object)">
            <summary>
            Sets a variable in the scope of the <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/>.
            </summary>
            <param name="name">The name of the variable to set.</param>
            <param name="value">The value to assign to the variable.</param>
        </member>
        <member name="T:PVA.NextGen.Core.Script.Constants.ScriptConstants">
            <summary>
            Constants used by the Scripting Module.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.ModuleName">
            <summary>
            The string name for the script module.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.FunctionFlags">
            <summary>
            Header Key listing which flags are true for this script.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.DisplayName">
            <summary>
            Header Key defining this script's display name.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.Icon">
            <summary>
            Header Key defining this script's icon data.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.Dependencies">
            <summary>
            Header Key listing this script's dependencies.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.EventScriptDirectory">
            <summary>
            Directory location for Event Scripts.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.ProcessScriptDirectory">
            <summary>
            Directory location for Process Scripts.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.Groups">
            <summary>
            Header Key listing the sorting groups this script belongs to.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.AnalogX">
            <summary>
            Name of analog x input.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.AnalogY">
            <summary>
            Name of analog y input.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptConstants.AnalogZ">
            <summary>
            Name of analog z input.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Core.Script.Constants.ScriptPermissions">
            <summary>
            Constant permission values used by ScriptModule.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptPermissions.CanCreateScript">
            <summary>
            Permission where user can create a new script.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptPermissions.CanEditScript">
            <summary>
            Permission where user can edit an already existing script.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptPermissions.CanDeleteScript">
            <summary>
            Permission where user can create delete an already existing script.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptPermissions.CanRunScript">
            <summary>
            Permission where user can create run standard scripts.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Script.Constants.ScriptPermissions.CanRunElevatedScript">
            <summary>
            Permission where user can create run elevated scripts.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Core.Script.Factories.ScriptFactory">
            <summary>
            Factory class for creating new <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> objects.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Factories.ScriptFactory.#ctor(PVA.NextGen.Common.Interfaces.IStrategyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Script.Factories.ScriptFactory"/> class.
            </summary>
            <param name="resolver">The <see cref="T:PVA.NextGen.Common.Interfaces.IStrategyResolver"/> that can access mappings of all registered types.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Factories.ScriptFactory.CreateScript``1(System.String)">
            <summary>
            Create a new <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> to the service by type and language.
            </summary>
            <param name="scriptLanguage">The <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> language.</param>
            <typeparam name="T">The type of <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> to create.</typeparam>
            <returns>The newly created <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/>.</returns>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Factories.ScriptFactory.GetScriptTypes">
            <summary>
            Get a listing of all concrete types mapped to <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> interface.
            </summary>
            <returns><see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> containing the name of all concrete mapped types.</returns>
        </member>
        <member name="T:PVA.NextGen.Core.Script.ScriptModule">
            <summary>
            ScriptModule.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.ScriptModule.RegisterTypes(Prism.Ioc.IContainerRegistry)">
            <summary>
            Register types with the container that will be used by the application.
            </summary>
            <param name="containerRegistry"><see cref="T:Prism.Ioc.IContainerRegistry"/> used for program-wide type registration.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Script.ScriptModule.OnInitialized(Prism.Ioc.IContainerProvider)">
            <summary>
            Perform required initialization methods for this Module.
            </summary>
            <param name="containerProvider">A <see cref="T:Prism.Ioc.IContainerProvider"/> used for progam-wide type resolving.</param>
        </member>
        <member name="T:PVA.NextGen.Core.Script.Services.EvaluatorService">
            <summary>
            Service providing compilation and evaluation of simple expressions used in conditions.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.EvaluatorService.#ctor(PVA.NextGen.Common.Interfaces.IScriptService,PVA.NextGen.CommonUI.Interfaces.IMessagingService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Script.Services.EvaluatorService"/> class.
            </summary>
            <param name="scriptService">The service used to create scripts.</param>
            <param name="messagingService">The <see cref="T:PVA.NextGen.CommonUI.Interfaces.IMessagingService"/> used for displaying messages to the user.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.EvaluatorService.Evaluate(PVA.NextGen.Common.Interfaces.ISimpleExpression,PVA.NextGen.Common.Interfaces.IBindableDictionary{System.String,System.Object})">
            <summary>
            Evaluate an expression.
            </summary>
            <param name="expression">The expression to be evaluated.</param>
            <param name="expressionObjects">The objects available to expressions.</param>
            <returns>The <see cref="T:System.Object"/> result of evaluation.</returns>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.EvaluatorService.ShowExpressionEvaluatorInDialog(PVA.NextGen.Common.Interfaces.IBindableDictionary{System.String,System.Object},PVA.NextGen.Common.Interfaces.ISimpleExpression,System.Type)">
            <summary>
            Show the Expression Evaluator in a new pop up dialog window.
            </summary>
            <param name="outputReferences">The output references available to the object on which this expression is built.</param>
            <param name="expression">The expression to be edited.</param>
            <param name="expectedType">The expected type of the evaluated expression.</param>
        </member>
        <member name="T:PVA.NextGen.Core.Script.Services.ScriptService">
            <summary>
            Service providing concrete <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> implementations.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.ScriptService.#ctor(PVA.NextGen.Common.Interfaces.IScriptFactory,PVA.NextGen.Common.Interfaces.ISharedServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Script.Services.ScriptService"/> class.
            </summary>
            <param name="scriptFactory">Factory used for creating new <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/>.</param>
            <param name="sharedServiceProvider">The <see cref="T:PVA.NextGen.Common.Interfaces.ISharedServiceProvider"/> used to access other modules services.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.ScriptService.CreateScript``1(System.String,System.String)">
            <summary>
            Create a new <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> to the service by type and language.
            </summary>
            <param name="scriptLanguage">The <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> language.</param>
            <param name="scriptLocation">The location of the script file.</param>
            <typeparam name="T">The type of <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> to create.</typeparam>
            <returns>The newly created <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/>.</returns>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.ScriptService.CreateConfiguration(System.String,System.String)">
            <summary>
            Create a new <see cref="T:PVA.NextGen.Common.Interfaces.IConfigurationScript"/> object.
            </summary>
            <param name="language">The script language to use for this <see cref="T:PVA.NextGen.Common.Interfaces.IConfigurationScript"/>.</param>
            <param name="location">The location of the script file for this <see cref="T:PVA.NextGen.Common.Interfaces.IConfigurationScript"/>.</param>
            <returns>The newly created <see cref="T:PVA.NextGen.Common.Interfaces.IConfigurationScript"/>.</returns>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.ScriptService.ProvideAPI(PVA.NextGen.Common.Interfaces.IScript)">
            <summary>
            Set the object that provides direct access to the execution methods of <see cref="T:PVA.NextGen.Common.Interfaces.ISharedFunction"/>.
            </summary>
            <param name="script">The <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> to be initialized.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Services.ScriptService.GetScriptTypes">
            <summary>
            Get a listing of all concrete types mapped to <see cref="T:PVA.NextGen.Common.Interfaces.IScript"/> interface.
            </summary>
            <returns><see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> containing the name of all concrete mapped types.</returns>
        </member>
        <member name="T:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel">
            <summary>
            Interaction logic for the Expression Evaluator View.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.#ctor(PVA.NextGen.Common.Interfaces.IEvaluatorService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel"/> class.
            </summary>
            <param name="evaluatorService">The service used to evaluate <see cref="T:PVA.NextGen.Common.Interfaces.ISimpleExpression"/> objects.</param>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.ExpressionValue">
            <summary>
            Gets or sets the <see cref="T:PVA.NextGen.Common.Interfaces.ISimpleExpression"/> value that will be modified.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.ExpressionItems">
            <summary>
            Gets or sets the dictionary of available items for use in an expression.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.RequestClose">
            <summary>
            Gets or sets a value indicating whether this view's parent dialog should close.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.DialogResult">
            <summary>
            Gets or sets the result of the user interaction with the buttons on shown in the dialog.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.Title">
            <summary>
            Gets or sets the title that will be shown in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.IconData">
            <summary>
            Gets or sets the data of the icon that will be displayed in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.IconColor">
            <summary>
            Gets or sets the color of the icon that will be displayed in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.IsExpressionValid">
            <summary>
            Gets or sets a value indicating whether the expression is valid.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.ExpressionError">
            <summary>
            Gets or sets the string describing the error when the expression cannot be validated.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.CursorPosition">
            <summary>
            Gets or sets the position of the cursor in the textbox.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.SelectionLength">
            <summary>
            Gets or sets the length of the selection in the textbox.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.ExpectedDataType">
            <summary>
            Gets or sets the expected data type of the evaluated expression.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.CancelExpressionEditCommand">
            <summary>
            Gets a delegate command used to cancel editing the current expression.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.SaveExpressionCommand">
            <summary>
            Gets a delegate command used to try verifying and saving the current expression.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.VerifyExpressionCommand">
            <summary>
            Gets a delegate command used to verify the current expression.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.InsertStringCommand">
            <summary>
            Gets a delegate command used insert an item into the current expression.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.ViewModels.ExpressionEvaluatorViewModel.SetExpressionValue(PVA.NextGen.Common.Interfaces.ISimpleExpression)">
            <summary>
            Set the value of the expression to modify.
            </summary>
            <param name="expression">The <see cref="T:PVA.NextGen.Common.Interfaces.ISimpleExpression"/> to modify.</param>
        </member>
        <member name="T:PVA.NextGen.Core.Script.Views.ExpressionEvaluatorView">
            <summary>
            Presentation logic for an Expression Evaluator view.
            </summary>
            <summary>
            ExpressionEvaluatorView
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Views.ExpressionEvaluatorView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Script.Views.ExpressionEvaluatorView"/> class.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Script.Views.ExpressionEvaluatorView.ViewModel">
            <summary>
            Gets the view's DataContext as an <see cref="T:PVA.NextGen.CommonUI.Interfaces.IExpressionEvaluatorViewModel"/>.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Script.Views.ExpressionEvaluatorView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
