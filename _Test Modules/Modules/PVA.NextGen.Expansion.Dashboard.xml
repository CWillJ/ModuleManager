<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PVA.NextGen.Expansion.Dashboard</name>
    </assembly>
    <members>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Classes.CorrectCursorPos">
            <summary>
            Helper class to get current location of cursor.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Classes.CorrectCursorPos.CorrectGetPosition(System.Windows.Media.Visual)">
            <summary>
            Gets the current cursor coordinates relative to the given visual object.
            </summary>
            <param name="relativeTo">Visual element coordinates are relative to.</param>
            <returns><see cref="T:System.Windows.Point"/> containing coordinates of current cursor position relative to the given visual element.</returns>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Classes.CorrectCursorPos.GetCursorPos(PVA.NextGen.Expansion.Dashboard.Classes.Win32Point@)">
            <summary>
            External dll function call to get absolute screen position of the cursor.
            </summary>
            <param name="pt"><see cref="T:PVA.NextGen.Expansion.Dashboard.Classes.Win32Point"/> struct that will receive the screen coordinates.</param>
            <returns><see cref="T:System.Boolean"/> whether or not the operation was successful.</returns>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Classes.DashboardDragDropBehavior">
            <summary>
            Logic for Dashboard drag-drop behavior.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Classes.DashboardDragDropBehavior.IsDragDropEnabledProperty">
            <summary>
            Dependency Property to attach to dashboard page RadTileView to enable drag drop events through behaviors.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Classes.DashboardDragDropBehavior.SetIsDragDropEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsDragDropEnabled property.
            </summary>
            <param name="obj"><see cref="T:System.Windows.DependencyObject"/> IsDragDropEnabled property is attached to.</param>
            <param name="value"><see cref="T:System.Boolean"/> value to set the IsDragDropEnabled property to.</param>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Classes.DashboardDragDropBehavior.GetIsDragDropEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets whether or not the IsDragDropEnabled is set.
            </summary>
            <param name="obj"><see cref="T:System.Windows.DependencyObject"/> IsDragDropEnabled property is attached to.</param>
            <returns>Whether or not IsDragDropEnabled is enabled.</returns>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Classes.TileDragDropBehavior">
            <summary>
            Implementation for <see cref="T:PVA.NextGen.Expansion.Dashboard.Classes.TileDragDropBehavior"/> class.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Classes.TileDragDropBehavior.IsDragDropEnabledProperty">
            <summary>
            Dependency Property to attach to TileShellView to enable drag drop events through behaviors.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Classes.TileDragDropBehavior.GetIsDragDropEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets whether or not the IsDragDropEnabled is set.
            </summary>
            <param name="obj"><see cref="T:System.Windows.DependencyObject"/> IsDragDropEnabled property is attached to.</param>
            <returns>Whether or not IsDragDropEnabled is enabled.</returns>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Classes.TileDragDropBehavior.SetIsDragDropEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsDragDropEnabled property.
            </summary>
            <param name="obj"><see cref="T:System.Windows.DependencyObject"/> IsDragDropEnabled property is attached to.</param>
            <param name="value"><see cref="T:System.Boolean"/> value to set the IsDragDropEnabled property to.</param>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Classes.Win32Point">
            <summary>
            Struct to use <see cref="T:System.Int32"/> as coordinate point instead of <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Classes.Win32Point.X">
            <summary>
            X coordinate of point.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Classes.Win32Point.Y">
            <summary>
            Y coordinate of point.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional">
            <summary>
            The object that defines a conditional formatting script for a Tile.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional.#ctor(System.Windows.Media.SolidColorBrush,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional"/> class.
            </summary>
            <param name="colorChange">The formatting that will take effect should the conditional return true.</param>
            <param name="comparisonOperator">The operator to be used to compare the source value to the target value.</param>
            <param name="value">The target value.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional.Expression">
            <summary>
            Gets or sets the compiled expression.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional.ExpressionText">
            <summary>
            Gets or sets the expression text as shown to the user in the expression editor.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional.ColorChange">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.SolidColorBrush"/> used to format this tile should the conditional prove true.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional.ComparisonOperator">
            <summary>
            Gets or sets the operator to be used to compare the source value to the target value.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Utilities.TileConditional.Value">
            <summary>
            Gets or sets the target value.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions">
            <summary>
            Constant permission values used by DashboardModule.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions.CanCreateDashboard">
            <summary>
            Permission where user can create a new dashboard page.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions.CanEditDashboard">
            <summary>
            Permission where user can edit an already existing dashboard page.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions.CanDeleteDashboard">
            <summary>
            Permission where user can create delete an already existing dashboard page.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions.CanCreateTiles">
            <summary>
            Permission where user can create a new tile.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions.CanEditTiles">
            <summary>
            Permission where user can edit an already existing tile.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardPermissions.CanDeleteTiles">
            <summary>
            Permission where user can create delete an already existing tile.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Constants.DashboardRegionNames">
            <summary>
            Dashboard Region Names.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardRegionNames.DashboardPageRegion">
            <summary>
            Dashboard Page Region.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardRegionNames.DashboardTileRegion">
            <summary>
            Dashboard Tile Region.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.DashboardRegionNames.TileContentRegion">
            <summary>
            Tile Content Region.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants">
            <summary>
            Constant values used by Tiles.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.UnitSize">
            <summary>
            The unit size of tiles in device-independent pixels.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.MaxUnitWidth">
            <summary>
            The maximum width of tiles in units.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.MaxUnitHeight">
            <summary>
            The maximum height of tiles in units.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.MinUnitWidth">
            <summary>
            The minimum width of tiles in units.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.MinUnitHeight">
            <summary>
            The minimum height of tiles in units.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.UnitMargin">
            <summary>
            The margin size of tiles in device-independent pixels.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultGaugeMin">
            <summary>
            The default minimum value of gauge displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultGaugeMax">
            <summary>
            The default maximum value of gauge displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultGaugeStepInterval">
            <summary>
            The default step interval value of gauge displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultGraphMin">
            <summary>
            The default minimum value of graph displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultGraphMax">
            <summary>
            The default maximum value of graph displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultGraphStepInterval">
            <summary>
            The default step interval value of graph displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultRadialGaugeStartAngle">
            <summary>
            The default start angle of radial gauge displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultRadialGaugeSweepAngle">
            <summary>
            The default sweep angle of radial gauge displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DefaultBufferSize">
            <summary>
            The default buffer size of trend displays.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.GaugeTile">
            <summary>
            The <see cref="T:System.String"/> name of the DI container mapping for Gauge Tile type.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.GraphTile">
            <summary>
            The <see cref="T:System.String"/> name of the DI container mapping for Graph Tile type.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.TextTile">
            <summary>
            The <see cref="T:System.String"/> name of the DI container mapping for String Tile type.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.LEDTile">
            <summary>
            The <see cref="T:System.String"/> name of the DI container mapping for LED Tile type.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.DirectoryPath">
            <summary>
            The <see cref="T:System.String"/> path to the Directory for loading and saving Dashboard Pages.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.AvailableTileColors">
            <summary>
            Gets the Placeholder list of available colors until Theming is implemented.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.NumericComparisonOperators">
            <summary>
            Gets the Placeholder list of available operators until Public Data/Module Data is implemented.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.LengthFunction">
            <summary>
            Gets <see cref="T:System.String"/> function template for the Length() Expression Editor Text function.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.SubstringFunction">
            <summary>
            Gets <see cref="T:System.String"/> function template for the Substring() Expression Editor Text function.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Constants.TileConstants.ContainsFunction">
            <summary>
            Gets <see cref="T:System.String"/> function template for the Contains() Expression Editor Text function.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Converters.ExpressionBackgroundConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Linq.Expressions.LambdaExpression"/> return type to a background color as SolidColorBrush.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Converters.ExpressionBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:System.Linq.Expressions.LambdaExpression"/> Type to a SolidColorBrush color.
            </summary>
            <param name="value">The Linq Expression to check. Check return type as bool.</param>
            <param name="targetType">Type: <see cref="T:System.Type"/>. <para>This parameter is not used.</para></param>
            <param name="parameter">Type: <see cref="T:System.Object"/>. <para>This parameter is not used.</para></param>
            <param name="culture">Type: <see cref="T:System.Globalization.CultureInfo"/>. <para>This parameter is not used.</para></param>
            <returns><c>LightGreen</c> if <paramref name="value"/> is func return type bool; otherwise, <c>red</c>.</returns>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Converters.ExpressionBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert Back is not used.
            </summary>
            <param name="value">not used.</param>
            <param name="targetType">Type: <see cref="T:System.Type"/>. <para>This parameter is not used.</para></param>
            <param name="parameter">Type: <see cref="T:System.Object"/>. <para>This parameter is not used.</para></param>
            <param name="culture">Type: <see cref="T:System.Globalization.CultureInfo"/>. <para>This parameter is not used.</para></param>
            <returns>  is not used.</returns>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Converters.TileUnitSizeToPixelsConverter">
            <summary>
            Represents the converter that converts the value of a <see cref="T:System.Boolean"/> to its inverse.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Converters.TileUnitSizeToPixelsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an <see cref="T:System.Int32"/> Tile Unit size to the appropriate pixel count.
            </summary>
            <param name="value">The Boolean value to convert. This value can be a standard Boolean value or a nullable Boolean value.</param>
            <param name="targetType">Type: <see cref="T:System.Type"/>. <para>This parameter is not used.</para></param>
            <param name="parameter">Type: <see cref="T:System.Object"/>. <para>This parameter is not used.</para></param>
            <param name="culture">Type: <see cref="T:System.Globalization.CultureInfo"/>. <para>This parameter is not used.</para></param>
            <returns><c>false</c> if <paramref name="value"/> is <c>true</c>; otherwise, <c>true</c>.</returns>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Converters.TileUnitSizeToPixelsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a tile pixel count to the unit size <see cref="T:System.Int32"/> of its original value.
            </summary>
            <param name="value">The Boolean value to convert. This value can be a standard Boolean value or a nullable Boolean value.</param>
            <param name="targetType">Type: <see cref="T:System.Type"/>. <para>This parameter is not used.</para></param>
            <param name="parameter">Type: <see cref="T:System.Object"/>. <para>This parameter is not used.</para></param>
            <param name="culture">Type: <see cref="T:System.Globalization.CultureInfo"/>. <para>This parameter is not used.</para></param>
            <returns><c>false</c> if <paramref name="value"/> is <c>true</c>; otherwise, <c>true</c>.</returns>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Converters.ValidExpressionToTrueConverter">
            <summary>
            Represents the converter that converts a <see cref="T:System.Windows.Media.SolidColorBrush"/> color to return type bool. False for Salmon, true for all other colors.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Converters.ValidExpressionToTrueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Media.SolidColorBrush"/> Color to a boolean.
            </summary>
            <param name="value">Solid Color brush for the current expression editor background color.</param>
            <param name="targetType">Type: <see cref="T:System.Type"/>. <para>This parameter is not used.</para></param>
            <param name="parameter">Type: <see cref="T:System.Object"/>. <para>This parameter is not used.</para></param>
            <param name="culture">Type: <see cref="T:System.Globalization.CultureInfo"/>. <para>This parameter is not used.</para></param>
            <returns><c>false</c> if <paramref name="value"/> is color salmon; otherwise, true.</returns>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Converters.ValidExpressionToTrueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert Back is not used.
            </summary>
            <param name="value">not used.</param>
            <param name="targetType">Type: <see cref="T:System.Type"/>. <para>This parameter is not used.</para></param>
            <param name="parameter">Type: <see cref="T:System.Object"/>. <para>This parameter is not used.</para></param>
            <param name="culture">Type: <see cref="T:System.Globalization.CultureInfo"/>. <para>This parameter is not used.</para></param>
            <returns>  is not used.</returns>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.DashboardModule">
            <summary>
            DashboardModule.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.DashboardModule.RegisterTypes(Prism.Ioc.IContainerRegistry)">
            <summary>
            Register types with the container that will be used by the application.
            </summary>
            <param name="containerRegistry"><see cref="T:Prism.Ioc.IContainerRegistry"/> used for program-wide type registration.</param>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.DashboardModule.OnInitialized(Prism.Ioc.IContainerProvider)">
            <summary>
            Perform any functionality after all type registration has taken place.
            </summary>
            <param name="containerProvider">A <see cref="T:Prism.Ioc.IContainerProvider"/> used for progam-wide type resolving.</param>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Factories.DashboardPageFactory">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageFactory"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.DashboardPageFactory.#ctor(PVA.NextGen.Common.Interfaces.IStrategyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Factories.DashboardPageFactory"/> class.
            </summary>
            <param name="strategyResolver">The <see cref="T:PVA.NextGen.Common.Interfaces.IStrategyResolver"/> that can access mappings of all registered types.</param>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.DashboardPageFactory.CreatePage(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Factories.TileContentFactory">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.ITileContentFactory"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.TileContentFactory.#ctor(PVA.NextGen.Common.Interfaces.IStrategyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Factories.TileContentFactory"/> class.
            </summary>
            <param name="strategyResolver">The <see cref="T:PVA.NextGen.Common.Interfaces.IStrategyResolver"/> that can access mappings of all registered types.</param>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.TileContentFactory.CreateTile(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.TileContentFactory.GetTileTypes">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Factories.TileShellFactory">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellFactory"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.TileShellFactory.#ctor(PVA.NextGen.Common.Interfaces.IStrategyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Factories.TileShellFactory"/> class.
            </summary>
            <param name="strategyResolver">The <see cref="T:PVA.NextGen.Common.Interfaces.IStrategyResolver"/> that can access mappings of all registered types.</param>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Factories.TileShellFactory.CreateShell(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellModel"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel"/> class.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel.TileModel">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel.Index">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel.ShellSize">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageService"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.#ctor(PVA.NextGen.CommonUI.Interfaces.IDashboardPageFactory,PVA.NextGen.Common.Interfaces.IShutdownService,PVA.NextGen.CommonUI.Interfaces.INavigationService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService"/> class.
            </summary>
            <param name="dashboardPageFactory">Factory for creating new <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageView"/>.</param>
            <param name="shutdownService">Service used to handle shutdown of modules.</param>
            <param name="navigationService">Service that provides adding and navigating to content throughout the application.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.Pages">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.AddPage(PVA.NextGen.CommonUI.Interfaces.INavigationToken)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.RemovePage(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.LoadPages(PVA.NextGen.CommonUI.Interfaces.INavigationToken)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.SavePages">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.DashboardPageService.NavigateToPage(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Services.TileService">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.ITileService"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.#ctor(PVA.NextGen.CommonUI.Interfaces.ITileShellFactory,PVA.NextGen.CommonUI.Interfaces.ITileContentFactory,PVA.NextGen.Common.Interfaces.IShutdownService,PVA.NextGen.CommonUI.Interfaces.INavigationService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Services.TileService"/> class.
            </summary>
            <param name="tileShellFactory">Factory for creating new <see cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellView"/>.</param>
            <param name="tileContentFactory">Factory for creating new <see cref="T:PVA.NextGen.CommonUI.Interfaces.ITileView"/>.</param>
            <param name="shutdownService">Service used to handle shutdown of modules.</param>
            <param name="navigationService">Service that provides adding and navigating to content throughout the application.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Services.TileService.Tiles">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Services.TileService.DirectoryLocation">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.GetTileTypes">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.AddPlaceholderTile(PVA.NextGen.CommonUI.Interfaces.INavigationToken)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.RemovePlaceholderTile">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.AddTile(PVA.NextGen.CommonUI.Interfaces.INavigationToken,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.RemoveTile(PVA.NextGen.CommonUI.Interfaces.ITileShellView)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.LoadTiles(PVA.NextGen.CommonUI.Interfaces.INavigationToken,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.SaveTiles">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.HidePoppedTiles">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Services.TileService.ShowPoppedTiles">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageViewModel"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.#ctor(PVA.NextGen.CommonUI.Interfaces.ITileService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel"/> class.
            </summary>
            <param name="tileService">An <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageService"/> to produce <see cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellView"/> and <see cref="T:PVA.NextGen.CommonUI.Interfaces.ITileView"/>.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.TileService">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.AddTileCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Add a new Tile.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.DeleteTileCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Delete a Tile.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.CloseTileCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Close a Tile.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.ResetTilesCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to reset all Tiles.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.IsLocked">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.ReferenceName">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.Index">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.Icon">
            <summary>
            Gets the Icon that should be displayed in all operator-focused interfaces.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.NavigationToken">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.TileTypes">
            <summary>
            Gets the collection of all registered concrete <see cref="T:PVA.NextGen.CommonUI.Interfaces.ITileView"/> implementations.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.Lock">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.InitializePage">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.SaveTiles">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.LoadTiles(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.ConfirmNavigationRequest(Prism.Regions.NavigationContext,System.Action{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.OnNavigatedTo(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.IsNavigationTarget(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardPageViewModel.OnNavigatedFrom(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardViewModel"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.#ctor(PVA.NextGen.CommonUI.Interfaces.IDashboardPageService,Prism.Events.IEventAggregator,PVA.NextGen.CommonUI.Interfaces.INavigationService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel"/> class.
            </summary>
            <param name="dashboardPageService">An <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageService"/> to produce <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageView"/>.</param>
            <param name="eventAggregator">An <see cref="T:Prism.Events.IEventAggregator"/> containing events used throughout the program.</param>
            <param name="navigationService">Service that provides adding and navigating to content throughout the application.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ToggleDashboardCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Toggle the status of the Dashboard.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.AddPageCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Add a page to the Dashboard.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.RemovePageCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Remove a page from the Dashboard.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.TogglePagesLockCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Toggle the locked status of the current dashboard page.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.PreviousPageCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to navigate to the previous page in the Dashboard.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.NextPageCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to navigate to the next page in the Dashboard.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ToggleViewPinnedCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to Toggle the pinned status of the dashboard view.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ActivePage">
            <summary>
            Gets or sets the current active <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageViewModel"/>.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.IsShown">
            <summary>
            Gets or sets a value indicating whether the Dashboard is expanded.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanAccess">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanCreateDashboard">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanEditDashboard">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanDeleteDashboard">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanCreateTiles">
            <summary>
            Gets the current user's <see cref="T:PVA.NextGen.Common.Enums.PermissionLevel"/> for creating a tile.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanEditTiles">
            <summary>
            Gets the current user's <see cref="T:PVA.NextGen.Common.Enums.PermissionLevel"/> for editing a tile.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.CanDeleteTiles">
            <summary>
            Gets the current user's <see cref="T:PVA.NextGen.Common.Enums.PermissionLevel"/> for deleting a tile.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.PageCount">
            <summary>
            Gets the total number of pages in the Dashboard.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ReferenceName">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.Icon">
            <summary>
            Gets the Icon that should be displayed in all operator-focused interfaces.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.NavigationToken">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.IsPinned">
            <summary>
            Gets or sets a value indicating whether the Dashboard is pinned.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ToggleViewPinned">
            <summary>
            Toggles between pinned and unpinned state for a dashboard page.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.LoadPages">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ToggleDashboard">
            <summary>
            Toggles between showing or hiding the entire Dashboard.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.TogglePagesLock">
            <summary>
            Toggles between locked and unlocked state for a dashboard page.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.ConfirmNavigationRequest(Prism.Regions.NavigationContext,System.Action{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.OnNavigatedTo(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.IsNavigationTarget(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.DashboardViewModel.OnNavigatedFrom(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellViewModel"/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.#ctor(PVA.NextGen.Expansion.Dashboard.Models.TileShellModel)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel"/> class.
            </summary>
            <param name="model">The <see cref="T:PVA.NextGen.Expansion.Dashboard.Models.TileShellModel"/> containing backing data for the TileShell.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.TileViewModel">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.ShellModel">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.ChangeSizeCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to change the size of the TileShell.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.ChangeColorCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to change the color of the TileShell.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.FlipTileCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to flip the TileShell.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.NavigationToken">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.IsOpen">
            <summary>
            Gets or sets a value indicating whether the IsOpen property of TileTypeSelectButton is true of false.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.ReferenceName">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.Icon">
            <summary>
            Gets the Icon that should be displayed in all operator-focused interfaces.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.IsBeingDeleted">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.CanUndock">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.PositionOffset">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.Load(PVA.NextGen.CommonUI.Interfaces.ITileShellModel)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.LoadTileDataIntoShell(PVA.NextGen.CommonUI.Interfaces.ITileViewModel)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.Flip">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.BeginPolling">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.EndPolling">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.ConfirmNavigationRequest(Prism.Regions.NavigationContext,System.Action{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.OnNavigatedTo(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.IsNavigationTarget(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.ViewModels.TileShellViewModel.OnNavigatedFrom(Prism.Regions.NavigationContext)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Views.DashboardPageView">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageView"/>
            <summary>
            DashboardPageView
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Views.DashboardPageView.#ctor(PVA.NextGen.CommonUI.Interfaces.IDashboardPageViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Views.DashboardPageView"/> class.
            </summary>
            <param name="viewModel">The <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardPageViewModel"/> to serve as this View's DataContext.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Views.DashboardPageView.ViewModel">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Views.DashboardPageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Views.DashboardView">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardView"/>
            <summary>
            DashboardView
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Views.DashboardView.#ctor(PVA.NextGen.CommonUI.Interfaces.IDashboardViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Views.DashboardView"/> class.
            </summary>
            <param name="viewModel">The instance of <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDashboardViewModel"/> used for interaction logic.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Views.DashboardView.ViewModel">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Views.DashboardView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PVA.NextGen.Expansion.Dashboard.Views.TileShellView">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellView"/>
            <summary>
            TileShellView
            </summary>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Views.TileShellView.#ctor(PVA.NextGen.CommonUI.Interfaces.ITileShellViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Expansion.Dashboard.Views.TileShellView"/> class.
            </summary>
            <param name="viewModel">The <see cref="T:PVA.NextGen.CommonUI.Interfaces.ITileShellViewModel"/> to serve as this View's DataContext.</param>
        </member>
        <member name="P:PVA.NextGen.Expansion.Dashboard.Views.TileShellView.ViewModel">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Expansion.Dashboard.Views.TileShellView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PVA.NextGen.Common.Constants.DashboardConstants">
            <summary>
            Constant values pertaining to the dashboard.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Common.Constants.DashboardConstants.ModuleName">
            <summary>
            The string name for the dashboard module.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Common.Constants.DashboardConstants.DeviceIDMax">
            <summary>
            The number of IDs available for any one device type on the system.
            </summary>
        </member>
    </members>
</doc>
