<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
    xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    mc:Ignorable="c">
    <ResourceDictionary.MergedDictionaries>
        <telerik:MaterialResourceDictionary />
    </ResourceDictionary.MergedDictionaries>
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <FontFamily x:Key="TelerikWebUI">/Telerik.Windows.Controls;component/Themes/Fonts/TelerikWebUI.ttf#TelerikWebUI</FontFamily>
    <sys:String x:Key="GlyphArrow60Up"></sys:String>
    <sys:String x:Key="GlyphArrow60Right"></sys:String>
    <sys:String x:Key="GlyphArrow60Down"></sys:String>
    <sys:String x:Key="GlyphArrow60Left"></sys:String>
    <sys:String x:Key="GlyphMoreVertical"></sys:String>
    <sys:String x:Key="GlyphMoreHorizontal"></sys:String>
    <sys:String x:Key="GlyphCheck"></sys:String>
    <SolidColorBrush x:Key="RadHyperlinkButtonHoverBrush" Color="#6699FF" />
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid
            x:Name="RootVisual"
            HorizontalAlignment="Right"
            Opacity="0"
            RenderTransformOrigin="0 0"
            SnapsToDevicePixels="True">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="10,0,0,0"
                Background="{telerik1:MaterialResource ResourceKey=ValidationBrush}"
                UseLayoutRounding="True">
                <ContentPresenter
                    Margin="16,10,16,10"
                    Content="{Binding ErrorContent}"
                    TextBlock.FontSize="{telerik1:MaterialResource ResourceKey=FontSize}"
                    TextBlock.Foreground="{telerik1:MaterialResource ResourceKey=MarkerInvertedBrush}" />
            </Border>
            <ContentControl />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RootVisual"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="StaticValidationTooltipTemplate">
        <StackPanel Orientation="Horizontal">
            <Grid VerticalAlignment="Top" SnapsToDevicePixels="True">
                <Border
                    Width="3"
                    Height="3"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent" />
                <AdornedElementPlaceholder x:Name="Holder" />
                <Border BorderBrush="{telerik1:MaterialResource ResourceKey=ValidationBrush}" BorderThickness="0,0,0,3" />
            </Grid>
            <Grid>
                <Border
                    MinHeight="36"
                    Margin="10,0,0,0"
                    Background="{telerik1:MaterialResource ResourceKey=ValidationBrush}"
                    SnapsToDevicePixels="True">
                    <TextBlock
                        x:Name="PART_ToolTip"
                        Padding="16,10,16,9"
                        VerticalAlignment="Center"
                        FontFamily="{telerik1:MaterialResource ResourceKey=FontFamily}"
                        FontSize="{telerik1:MaterialResource ResourceKey=FontSize}"
                        Foreground="{telerik1:MaterialResource ResourceKey=MarkerInvertedBrush}"
                        Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" />
                </Border>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <Style x:Key="ShadowStyle" TargetType="{x:Type mat:Shadow}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
        <Setter Property="ShadowDepth" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.ShadowDepth), Mode=OneWay, FallbackValue=Depth1}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Theme" Value="Material" />
    </Style>
    <Style BasedOn="{StaticResource ShadowStyle}" TargetType="{x:Type mat:Shadow}" />
    <sys:Double x:Key="RippleOpacity">1</sys:Double>
    <Style x:Key="MaterialControlStyle" TargetType="{x:Type mat:MaterialControl}">
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment, Mode=OneWay}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalContentAlignment, Mode=OneWay}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="RippleOpacity" Value="0.5" />
        <Setter Property="RippleBrush" Value="{telerik1:MaterialResource ResourceKey=RippleBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mat:MaterialControl}">
                    <Grid Margin="{TemplateBinding BorderThickness}" Background="Transparent">
                        <!--  Visuals used for animating interactions and in code  -->
                        <Rectangle
                            x:Name="PART_BackgroundVisual"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="{x:Null}"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="PART_MouseOverVisual"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="{TemplateBinding mat:MaterialAssist.MouseOverBrush}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_PressedVisual"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="{TemplateBinding mat:MaterialAssist.PressedBrush}"
                            Opacity="0" />
                        <Canvas
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            IsHitTestVisible="False"
                            Opacity="{TemplateBinding RippleOpacity}">

                            <!--  this is the feedback element used in code  -->
                            <Ellipse
                                x:Name="PART_FeedbackElement"
                                Canvas.Left="{TemplateBinding RippleX}"
                                Canvas.Top="{TemplateBinding RippleY}"
                                Width="{TemplateBinding RippleSize}"
                                Height="{TemplateBinding RippleSize}"
                                Fill="{TemplateBinding RippleBrush}"
                                Opacity="0"
                                RenderTransformOrigin=".5 .5">
                                <Ellipse.RenderTransform>

                                    <!--  PART_ScaleTransform ScaleTranform used in code  -->
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="0" ScaleY="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="{StaticResource RippleOpacity}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseOut">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="RenderTransform.ScaleX">

                                                <!--  PART_MousePressedToNormalScaleXKeyFrame EasingDoubleKeyFrame used in code  -->
                                                <EasingDoubleKeyFrame
                                                    x:Name="PART_MousePressedToNormalScaleXKeyFrame"
                                                    KeyTime="0:0:0.30"
                                                    Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="RenderTransform.ScaleY">

                                                <!--  PART_MousePressedToNormalScaleYKeyFrame EasingDoubleKeyFrame used in code  -->
                                                <EasingDoubleKeyFrame
                                                    x:Name="PART_MousePressedToNormalScaleYKeyFrame"
                                                    KeyTime="0:0:0.30"
                                                    Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_FeedbackElement" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="{StaticResource RippleOpacity}" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="{StaticResource RippleOpacity}" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="{StaticResource RippleOpacity}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_FeedbackElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="animation:AnimationManager.IsAnimationEnabled" Value="False">
                            <Setter Property="IsRippleEnabled" Value="False" />
                            <Setter TargetName="PART_MouseOverVisual" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_PressedVisual" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_BackgroundVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="PART_BackgroundVisual" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_BackgroundVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  Interaction when animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_BackgroundVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_BackgroundVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <!--  Interaction when animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_MouseOverVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_MouseOverVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_PressedVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_PressedVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MaterialControlStyle}" TargetType="{x:Type mat:MaterialControl}" />
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=AlternativeBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:MaterialResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="16,10,16,9" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            Opacity="0"
                            SnapsToDevicePixels="True" />
                        <mat:MaterialControl CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" IsSmartClipped="True">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                Opacity="{telerik1:MaterialResource ResourceKey=PrimaryOpacity}"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:MaterialControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  General IsKeyBoardFocused setters  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
                        </Trigger>

                        <!--  Focused and animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!--  Focused and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <!--  General IsMouseOver setters  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2" />
                        </Trigger>

                        <!--  General IsPressed setters  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button" />
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=AlternativeBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:MaterialResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="16,10,16,9" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            Opacity="0"
                            SnapsToDevicePixels="True" />
                        <mat:MaterialControl CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" IsSmartClipped="True">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                Opacity="{telerik1:MaterialResource ResourceKey=PrimaryOpacity}"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </mat:MaterialControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="RepeatButton" />
    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryNormalBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=IconBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="28" HorizontalAlignment="Left">
                        <Border
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            CornerRadius="{telerik1:MaterialResource ResourceKey=CornerRadius}" />
                        <AdornedElementPlaceholder x:Name="Holder" />
                        <Grid
                            Width="20"
                            Height="20"
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Ellipse
                                Fill="{x:Null}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="True"
                                Stroke="{telerik1:MaterialResource ResourceKey=ValidationBrush}"
                                StrokeThickness="2" />
                        </Grid>
                        <ToolTipService.ToolTip>
                            <ToolTip
                                x:Name="PART_ToolTip"
                                Margin="0,2,0,0"
                                DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                                IsOpen="True"
                                Placement="Right"
                                Template="{StaticResource ErrorTooltipTemplate}" />
                        </ToolTipService.ToolTip>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Ellipse
                                x:Name="FocusEllipse"
                                Width="36"
                                Height="36"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                RenderTransformOrigin=".5 .5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                x:Name="clipEllipse"
                                Width="36"
                                Height="36"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Panel.ZIndex="-1"
                                Fill="{x:Null}"
                                IsHitTestVisible="False" />
                            <mat:MaterialControl
                                x:Name="Material"
                                Width="36"
                                Height="36"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                mat:MaterialAssist.MouseOverBrush="{x:Null}"
                                mat:MaterialAssist.PressedBrush="{x:Null}"
                                BorderThickness="0"
                                CornerRadius="18"
                                IsRippleCentered="True"
                                IsSmartClipped="True"
                                RippleBrush="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}">
                                <Grid>
                                    <Ellipse
                                        x:Name="radioBorder"
                                        Width="20"
                                        Height="20"
                                        Fill="{TemplateBinding Background}"
                                        Opacity="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}"
                                        Stroke="{TemplateBinding BorderBrush}"
                                        StrokeThickness="2" />
                                    <Grid x:Name="markGrid" Background="Transparent">
                                        <Ellipse
                                            x:Name="optionMark"
                                            Width="10"
                                            Height="10"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="{TemplateBinding Foreground}"
                                            Opacity="0" />
                                        <Ellipse
                                            x:Name="indeterminateMark"
                                            Width="10"
                                            Height="10"
                                            Margin="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Stroke="{telerik1:MaterialResource ResourceKey=IconBrush}"
                                            StrokeThickness="3"
                                            Visibility="Collapsed" />
                                    </Grid>
                                </Grid>
                            </mat:MaterialControl>
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="clipEllipse" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="clipEllipse" Property="Opacity" Value=".3" />
                        </MultiTrigger>

                        <!--  Focused and animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To=".3"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.15" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusEllipse" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusEllipse" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.3"
                                            To="0"
                                            Duration="00:00:00.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!--  IsChecked True  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{telerik1:MaterialResource ResourceKey=PrimaryNormalBrush}" />
                            <Setter TargetName="radioBorder" Property="Stroke" Value="{telerik1:MaterialResource ResourceKey=PrimaryNormalBrush}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=AccentHoverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="Material" Property="RippleBrush" Value="{telerik1:MaterialResource ResourceKey=AccentHoverBrush}" />
                        </Trigger>

                        <!--  IsChecked Null  -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}" />
                            <Setter TargetName="radioBorder" Property="Fill" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
                        </Trigger>

                        <!--  IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="radioBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="radioBorder" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Stroke" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioBorder" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <!--  IsPressed  -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="radioBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="radioBorder" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="indeterminateMark" Property="Stroke" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioBorder" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="radioBorder" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="optionMark" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton" />
    <DataTemplate x:Key="RepeatButtonLineUpTemplate">
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            telerik1:GlyphAdorner.ShowGlyphInDesignTime="True"
            FontFamily="{StaticResource TelerikWebUI}"
            FontSize="13"
            FontStyle="Normal"
            FontWeight="Normal"
            Foreground="{TemplateBinding TextElement.Foreground}">
            <Run Text="{StaticResource GlyphArrow60Up}" />
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineDownTemplate">
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            telerik1:GlyphAdorner.ShowGlyphInDesignTime="True"
            FontFamily="{StaticResource TelerikWebUI}"
            FontSize="13"
            FontStyle="Normal"
            FontWeight="Normal"
            Foreground="{TemplateBinding TextElement.Foreground}">
            <Run Text="{StaticResource GlyphArrow60Down}" />
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineLeftTemplate">
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            telerik1:GlyphAdorner.ShowGlyphInDesignTime="True"
            FontFamily="{StaticResource TelerikWebUI}"
            FontSize="13"
            FontStyle="Normal"
            FontWeight="Normal"
            Foreground="{TemplateBinding TextElement.Foreground}">
            <Run Text="{StaticResource GlyphArrow60Left}" />
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineRightTemplate">
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            telerik1:GlyphAdorner.ShowGlyphInDesignTime="True"
            FontFamily="{StaticResource TelerikWebUI}"
            FontSize="13"
            FontStyle="Normal"
            FontWeight="Normal"
            Foreground="{TemplateBinding TextElement.Foreground}">
            <Run Text="{StaticResource GlyphArrow60Right}" />
        </TextBlock>
    </DataTemplate>
    <Style
        x:Key="RepeatButtonLineBaseStyle"
        BasedOn="{StaticResource RepeatButtonStyle}"
        TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.IsShadowDisabled" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerInvertedBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerInvertedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RepeatButtonLineUpStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineUpTemplate}" />
    </Style>
    <Style
        x:Key="RepeatButtonLineDownStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineDownTemplate}" />
    </Style>
    <Style
        x:Key="RepeatButtonLineLeftStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}" />
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RepeatButtonLineRightStyle"
        BasedOn="{StaticResource RepeatButtonLineBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}" />
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ThumbBaseStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent">
                        <Border
                            x:Name="Track"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="MouseOverVisual"
                            Background="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Background" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Track" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ThumbHorizontalStyle"
        BasedOn="{StaticResource ThumbBaseStyle}"
        TargetType="Thumb">
        <Setter Property="Height" Value="13" />
    </Style>
    <Style
        x:Key="ThumbVerticalStyle"
        BasedOn="{StaticResource ThumbBaseStyle}"
        TargetType="Thumb">
        <Setter Property="Width" Value="13" />
    </Style>
    <Style x:Key="RepeatButtonBlankStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ScrollBarHorizontalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="17" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition MaxWidth="17" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Margin="0,-1,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource RepeatButtonLineLeftStyle}" />
            <Track
                Name="PART_Track"
                Grid.Column="1"
                Orientation="Horizontal">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">17</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ThumbHorizontalStyle}" />
                </Track.Thumb>
            </Track>
            <RepeatButton
                Grid.Column="2"
                Command="{x:Static ScrollBar.LineRightCommand}"
                Style="{StaticResource RepeatButtonLineRightStyle}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollBarVerticalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="17" />
                <RowDefinition Height="1*" />
                <RowDefinition MaxHeight="17" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Margin="-1,0,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <RepeatButton
                Command="{x:Static ScrollBar.LineUpCommand}"
                Content="Up"
                Style="{StaticResource RepeatButtonLineUpStyle}" />
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="True">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">17</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonBlankStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ThumbVerticalStyle}" />
                </Track.Thumb>
            </Track>
            <RepeatButton
                Grid.Row="2"
                Command="{x:Static ScrollBar.LineDownCommand}"
                Style="{StaticResource RepeatButtonLineDownStyle}" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource ScrollBarVerticalControlTemplate}" />
        <Setter Property="MinWidth" Value="17" />
        <Setter Property="MinHeight" Value="17" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource ScrollBarHorizontalControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter
                    x:Name="PART_ScrollContentPresenter"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="{TemplateBinding Padding}"
                    CanContentScroll="{TemplateBinding CanContentScroll}"
                    CanHorizontallyScroll="False"
                    CanVerticallyScroll="False"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                <ScrollBar
                    x:Name="PART_VerticalScrollBar"
                    Grid.Row="0"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="VerticalScrollBar"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Cursor="Arrow"
                    Maximum="{TemplateBinding ScrollableHeight}"
                    Minimum="0"
                    ViewportSize="{TemplateBinding ViewportHeight}"
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar
                    x:Name="PART_HorizontalScrollBar"
                    Grid.Row="1"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="HorizontalScrollBar"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Cursor="Arrow"
                    Maximum="{TemplateBinding ScrollableWidth}"
                    Minimum="0"
                    Orientation="Horizontal"
                    ViewportSize="{TemplateBinding ViewportWidth}"
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar" />
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer" />
    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="mat:MaterialAssist.IsShadowDisabled" Value="False" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="16,10,16,9" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid Margin="5">
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="SelectionBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Padding" Value="8,10,8,9" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="CaretBrush" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="root">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border
                            x:Name="ReadOnlyVisual"
                            Background="{telerik1:MaterialResource ResourceKey=ReadOnlyBackgroundBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="0,0,0,3"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="0,0,0,3"
                            RenderTransformOrigin="0.5 1">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="0" ScaleY="1" />
                            </Border.RenderTransform>
                        </Border>
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Foreground="{TemplateBinding Foreground}"
                            Opacity="{telerik1:MaterialResource ResourceKey=PrimaryOpacity}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderThickness" Value="0,0,0,3" />
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}" />
                        </Trigger>

                        <!--  Focused and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderThickness" Value="0,0,0,3" />
                        </MultiTrigger>

                        <!--  Focused and animation Enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox" />
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="SelectionBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Padding" Value="8,10,8,9" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="CaretBrush" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid x:Name="root">
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="0,0,0,3"
                            RenderTransformOrigin="0.5 1">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="0" ScaleY="1" />
                            </Border.RenderTransform>
                        </Border>
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Padding="0"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush)}" />
                            <Setter TargetName="BorderVisual" Property="BorderThickness" Value="0,0,0,3" />
                        </MultiTrigger>

                        <!--  Focused and animation Enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseIn" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource PasswordBoxStyle}" TargetType="PasswordBox" />
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=AlternativeBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryNormalBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="Padding" Value="16,10,16,9" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="SelectedVisual"
                            Background="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            SnapsToDevicePixels="True" />
                        <mat:MaterialControl
                            x:Name="Material"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            ClipToBounds="True">
                            <ContentControl
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False" />
                        </mat:MaterialControl>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused and animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!--  Focused and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <!--  IsSelected general setters  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=AccentNormalBrush}" />
                        </Trigger>

                        <!--  Selected and animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="00:00:00.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!--  Selected and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <Trigger SourceName="Material" Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer
                                x:Name="ScrollViewer"
                                Margin="0,8"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter ClipToBounds="True" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="ListBox" />
    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="ListBoxItem" />
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryNormalBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=IconBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="0,0,6,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="27" HorizontalAlignment="Left">
                        <Border
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            CornerRadius="{telerik1:MaterialResource ResourceKey=CornerRadius}" />
                        <AdornedElementPlaceholder x:Name="Holder" />
                        <Grid
                            Width="18"
                            Height="18"
                            Margin="9,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Border
                                BorderBrush="{telerik1:MaterialResource ResourceKey=ValidationBrush}"
                                BorderThickness="2"
                                CornerRadius="{telerik1:MaterialResource ResourceKey=CornerRadius}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="True" />
                            <Path
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Data="{StaticResource ArrowTopRight8x8}"
                                Fill="{telerik1:MaterialResource ResourceKey=ValidationBrush}"
                                SnapsToDevicePixels="True"
                                Stretch="None" />
                        </Grid>
                        <ToolTipService.ToolTip>
                            <ToolTip
                                x:Name="PART_ToolTip"
                                Margin="0,2,0,0"
                                DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                                Placement="Right"
                                Template="{StaticResource ErrorTooltipTemplate}" />
                        </ToolTipService.ToolTip>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Ellipse
                                x:Name="FocusEllipse"
                                Width="36"
                                Height="36"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                RenderTransformOrigin=".5 .5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                x:Name="clipEllipse"
                                Width="36"
                                Height="36"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Panel.ZIndex="-1"
                                Fill="{x:Null}"
                                IsHitTestVisible="False" />
                            <mat:MaterialControl
                                x:Name="Material"
                                Width="36"
                                Height="36"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                mat:MaterialAssist.MouseOverBrush="{x:Null}"
                                mat:MaterialAssist.PressedBrush="{x:Null}"
                                BorderThickness="0"
                                CornerRadius="18"
                                IsRippleCentered="True"
                                IsSmartClipped="True"
                                RippleBrush="{telerik1:MaterialResource ResourceKey=PrimaryFocusBrush}">
                                <Grid>
                                    <Border
                                        x:Name="checkBoxBorder"
                                        Width="18"
                                        Height="18"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2"
                                        Opacity="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}">
                                        <Grid
                                            x:Name="markGrid"
                                            Width="14"
                                            Height="14"
                                            Background="Transparent"
                                            Opacity="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}">
                                            <TextBlock
                                                x:Name="optionMark"
                                                Margin="1,1,0,0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                telerik1:GlyphAdorner.ShowGlyphInDesignTime="True"
                                                FontFamily="{StaticResource TelerikWebUI}"
                                                FontSize="13"
                                                FontStyle="Normal"
                                                FontWeight="Normal"
                                                Foreground="{telerik1:MaterialResource ResourceKey=IconBrush}"
                                                Opacity="0">
                                                <Run Text="{StaticResource GlyphCheck}" />
                                            </TextBlock>
                                            <Border
                                                x:Name="indeterminateMark"
                                                Width="10"
                                                Height="10"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Background="{telerik1:MaterialResource ResourceKey=IconBrush}"
                                                CornerRadius="2"
                                                Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </mat:MaterialControl>
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Focused and animation disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="clipEllipse" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}" />
                            <Setter TargetName="clipEllipse" Property="Opacity" Value=".3" />
                        </MultiTrigger>

                        <!--  Focused and animation enabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="animation:AnimationManager.IsAnimationEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To=".3"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.15" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            From="0"
                                            To="1"
                                            Duration="00:00:00.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusEllipse" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusEllipse" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusEllipse"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.3"
                                            To="0"
                                            Duration="00:00:00.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!--  IsChecked True  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="optionMark" Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=AccentHoverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="Material" Property="RippleBrush" Value="{telerik1:MaterialResource ResourceKey=AccentHoverBrush}" />
                        </Trigger>

                        <!--  IsChecked Null  -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
                        </Trigger>

                        <!--  IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                            <Setter TargetName="optionMark" Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Background" Value="{telerik1:MaterialResource ResourceKey=PrimaryHoverBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}" />
                        </Trigger>

                        <!--  IsPressed  -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="markGrid" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="optionMark" Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Background" Value="{telerik1:MaterialResource ResourceKey=PrimaryPressedBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=SecondaryOpacity}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{telerik1:MaterialResource ResourceKey=MainBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />

    <!--  Style for Separator which is not child of StatusBar (horizontal one)  -->
    <Style x:Key="SeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for Separator which is child of StatusBar (vertical one)  -->
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="Margin" Value="2,4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for StatusBarItem  -->
    <Style x:Key="StatusBarItemStyle" TargetType="StatusBarItem">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Padding" Value="9,4" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="StatusBarItem">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="true" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Static StatusBar.SeparatorStyleKey}}" TargetType="Separator">
                <Setter Property="Margin" Value="3,-1" />
            </Style>
        </Style.Resources>
    </Style>

    <!--  Style for StatusBar  -->
    <Style x:Key="StatusBarStyle" TargetType="StatusBar">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerSolidBrush}" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="StatusBar">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Static StatusBar.SeparatorStyleKey}}" TargetType="Separator" />
        </Style.Resources>
    </Style>
    <Style BasedOn="{StaticResource StatusBarStyle}" TargetType="StatusBar" />
    <Style BasedOn="{StaticResource StatusBarItemStyle}" TargetType="StatusBarItem" />
    <Style BasedOn="{StaticResource SeparatorStyle}" TargetType="Separator" />
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="MinWidth" Value="14" />
        <Setter Property="MinHeight" Value="14" />
        <Setter Property="MaxWidth" Value="14" />
        <Setter Property="Background" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:MaterialResource ResourceKey=DividerBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=IconBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock
                            x:Name="grip"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            telerik1:GlyphAdorner.ShowGlyphInDesignTime="True"
                            FontFamily="{StaticResource TelerikWebUI}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStyle="Normal"
                            FontWeight="Normal"
                            Foreground="{TemplateBinding Foreground}">
                            <Run x:Name="gripRun" Text="{StaticResource GlyphMoreVertical}" />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="gripRun" Property="Text" Value="{StaticResource GlyphMoreHorizontal}" />
                            <Setter Property="MaxWidth" Value="{x:Static sys:Double.MaxValue}" />
                            <Setter Property="MaxHeight" Value="14" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource GridSplitterStyle}" TargetType="{x:Type GridSplitter}" />
    <Style x:Key="HyperlinkStyle" TargetType="Hyperlink">
        <Setter Property="FontFamily" Value="{telerik1:MaterialResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:MaterialResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:MaterialResource ResourceKey=PrimaryNormalBrush}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonHoverBrush}" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Opacity" Value="{telerik1:MaterialResource ResourceKey=DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource HyperlinkStyle}" TargetType="Hyperlink" />
</ResourceDictionary>
