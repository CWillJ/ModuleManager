<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModuleManager</name>
    </assembly>
    <members>
        <member name="T:ModuleManager.App">
            <summary>
            Interaction logic for App.xaml.
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:ModuleManager.App.OnStartup(System.Windows.StartupEventArgs)">
            <summary>
            Startup logic of the application. Raises the Startup event.
            </summary>
            <param name="args">A <see cref="T:System.Windows.StartupEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ModuleManager.App.OnInitialized">
            <summary>
            Contains actions that should occur last.
            </summary>
        </member>
        <member name="M:ModuleManager.App.CreateShell">
            <summary>
            Creates the shell or main window of the application.
            </summary>
            <returns>The shell of the application.</returns>
        </member>
        <member name="M:ModuleManager.App.InitializeModules">
            <summary>
            Initializes the modules in the module catalog.
            </summary>
        </member>
        <member name="M:ModuleManager.App.RegisterTypes(Prism.Ioc.IContainerRegistry)">
            <summary>
            Used to register types with the container that will be used by the application.
            </summary>
            <param name="containerRegistry"><see cref="T:Prism.Ioc.IContainerRegistry"/> used for container type registration.</param>
        </member>
        <member name="M:ModuleManager.App.CreateModuleCatalog">
            <summary>
            Creates the module catalog.
            </summary>
            <returns>New module catalog.</returns>
        </member>
        <member name="M:ModuleManager.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ModuleManager.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:ModuleManager.Bootstrapper">
            <summary>
            A bootstrapper for ModuleManager application.
            </summary>
        </member>
        <member name="M:ModuleManager.Bootstrapper.CreateShell">
            <summary>
            Overrides the CreateShell method.
            </summary>
            <returns>Returns the resolved shell.</returns>
        </member>
        <member name="M:ModuleManager.Bootstrapper.InitializeShell">
            <summary>
            Overrides the InitializeShell method.
            </summary>
        </member>
        <member name="T:ModuleManager.Converters.CheckBoxConverter">
            <summary>
            CheckBoxConverter is used to tell if a module is enabled or disabled.
            </summary>
        </member>
        <member name="M:ModuleManager.Converters.CheckBoxConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            CheckBox converter.
            </summary>
            <param name="values">CheckBox values.</param>
            <param name="targetType">Target type of values.</param>
            <param name="parameter">Parameters.</param>
            <param name="culture">CultureInfo.</param>
            <returns>A clone of the object array values.</returns>
        </member>
        <member name="M:ModuleManager.Converters.CheckBoxConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">CheckBox values.</param>
            <param name="targetTypes">Target type of values.</param>
            <param name="parameter">Parameters.</param>
            <param name="culture">CultureInfo.</param>
            <returns>Not implenemted.</returns>
        </member>
        <member name="T:ModuleManager.Converters.TypeNameToIconConverter">
            <summary>
            Converter to convert the string name of a member type to an icon.
            </summary>
        </member>
        <member name="M:ModuleManager.Converters.TypeNameToIconConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convery string name of a member type to an icon.
            </summary>
            <param name="value">Object passed in.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Parameter object.</param>
            <param name="culture">Culture.</param>
            <returns>String path to an image icon.</returns>
        </member>
        <member name="M:ModuleManager.Converters.TypeNameToIconConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">Object passed in.</param>
            <param name="targetType">Target type.</param>
            <param name="parameter">Parameter object.</param>
            <param name="culture">Culture.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="T:ModuleManager.TemplateSelectors.TemplateSelector">
            <summary>
            Used to selected a DataTemplate in the view.
            </summary>
        </member>
        <member name="M:ModuleManager.TemplateSelectors.TemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Used to select the DataTemplate for the description.
            </summary>
            <param name="item">Object.</param>
            <param name="container">Container.</param>
            <returns>A DataTemplate depending on the object passed in.</returns>
        </member>
        <member name="T:ModuleManager.TemplateSelectors.TreeViewItemTemplateSelector">
            <summary>
            Used to selected a DataTemplate in the view.
            </summary>
        </member>
        <member name="M:ModuleManager.TemplateSelectors.TreeViewItemTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Used to select the DataTemplate for tree view items.
            </summary>
            <param name="item">Object.</param>
            <param name="container">Container.</param>
            <returns>A DataTemplate depending on the object passed in.</returns>
        </member>
        <member name="T:ModuleManager.ViewModels.ShellViewModel">
            <summary>
            ModuleManagerViewModel will handle commands from the main view.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ShellViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.ViewModels.ShellViewModel"/> class.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.UseSaveFileDialog">
            <summary>
            Gets or sets a value indicating whether SaveFileDialog is used on save settings.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.LoadModulesCommand">
            <summary>
            Gets or sets the LoadModulesCommand as a ModuleManagerICommand.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.SaveConfigCommand">
            <summary>
            Gets or sets the SaveConfigCommand as a ModuleManagerICommand.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.LoadUnloadCommand">
            <summary>
            Gets or sets the LoadUnloadCommand as a ModuleManagerICommand.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.ModuleDirectory">
            <summary>
            Gets or sets the file location as a string.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.InfoRetriever">
            <summary>
            Gets or sets a ModuleInfoRetriever.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.LoadingModules">
            <summary>
            Gets or sets a value indicating whether the application is currently loading modules.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.ProgressBarText">
            <summary>
            Gets or sets the progress bar text.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.CurrentProgress">
            <summary>
            Gets the current progress of the status bar.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.ProgressBarIsVisible">
            <summary>
            Gets or sets a value indicating whether a progress bar is visible.
            </summary>
        </member>
        <member name="P:ModuleManager.ViewModels.ShellViewModel.Modules">
            <summary>
            Gets or sets the collection of Modules.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ShellViewModel.StoreModules">
            <summary>
            StoreModules will attempt to get all assemblies from a dll and store it
            as a Module in the Modules collection.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ShellViewModel.UpdateProgressBarText">
            <summary>
            Runs async to update the progress bar with current module text.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ShellViewModel.SaveConfig">
            <summary>
            SaveConfig will save an ObservableCollection to an xml file.
            The boolean, UseSaveFileDialog will be tested to see if the
            SaveFileDialog will be used or if the hardcoded file location
            will be used.
            </summary>
        </member>
        <member name="M:ModuleManager.ViewModels.ShellViewModel.LoadConfig">
            <summary>
            LoadConfig will load an ObservableCollection of type Module from an xml file.
            </summary>
            <returns>ObservableCollection of type Module.</returns>
        </member>
        <member name="M:ModuleManager.ViewModels.ShellViewModel.GetModuleDirectory">
            <summary>
            Gets the directory selected by the user that should contain dll files.
            </summary>
            <returns>String of the directory path.</returns>
        </member>
        <member name="T:ModuleManager.Views.DescriptionView">
            <summary>
            Interaction logic for DescriptionView.xaml.
            </summary>
            <summary>
            DescriptionView
            </summary>
        </member>
        <member name="M:ModuleManager.Views.DescriptionView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.DescriptionView"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.DescriptionView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.LoadSaveButtons">
            <summary>
            Interaction logic for LoadSaveButtons.xaml.
            </summary>
            <summary>
            LoadSaveButtons
            </summary>
        </member>
        <member name="M:ModuleManager.Views.LoadSaveButtons.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.LoadSaveButtons"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.LoadSaveButtons.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.ModuleView">
            <summary>
            Interaction logic for ModuleView.xaml.
            </summary>
            <summary>
            ModuleView
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ModuleView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.ModuleView"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ModuleView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.ProgressBar">
            <summary>
            Interaction logic for ProgressBar.xaml.
            </summary>
            <summary>
            ProgressBar
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.ProgressBar"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ProgressBar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ModuleManager.Views.ShellView">
            <summary>
            Interaction logic for MainWindow.xaml.
            </summary>
            <summary>
            ShellView
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ShellView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.Views.ShellView"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.Views.ShellView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
