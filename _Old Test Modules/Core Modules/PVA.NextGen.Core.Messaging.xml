<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PVA.NextGen.Core.Messaging</name>
    </assembly>
    <members>
        <member name="T:PVA.NextGen.Core.Messaging.Constants.DialogTypes">
            <summary>
            Names used to register types of <see cref="T:PVA.NextGen.CommonUI.Interfaces.IDialogView"/>.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Messaging.Constants.DialogTypes.MessageDialog">
            <summary>
            The <see cref="T:System.String"/> name used to register the Message dialog.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Messaging.Constants.DialogTypes.ViewDialog">
            <summary>
            The <see cref="T:System.String"/> name used to register the Custom view dialog.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.Constants.MessagingConstants">
            <summary>
            Constant values pertaining to the <see cref="T:PVA.NextGen.CommonUI.Interfaces.IMessagingService"/>.
            </summary>
        </member>
        <member name="F:PVA.NextGen.Core.Messaging.Constants.MessagingConstants.APIName">
            <summary>
            The <see cref="T:System.String"/> name used when accessing the Messaging API.
            </summary>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.Factories.MessageViewFactory">
            <summary>
            Factory class for generating new <see cref="T:PVA.NextGen.Core.Messaging.Views.MessageDialogView"/>.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Factories.MessageViewFactory.CreateMessageView(System.String,System.String,System.String,System.String,System.Boolean[],System.String[],System.Action{Prism.Services.Dialogs.IDialogResult})">
            <summary>
            Create a new message view.
            </summary>
            <param name="title">The <see cref="T:System.String"/> window title for this dialog.</param>
            <param name="message">The <see cref="T:System.String"/> message to display in the dialog.</param>
            <param name="iconData">The <see cref="T:System.String"/> data representing the icon path for this dialog window.</param>
            <param name="iconColor">The <see cref="T:System.String"/> color of the icon for the dialog window.</param>
            <param name="buttons">A <see cref="T:System.Boolean"/> array indicating which buttons are to be displayed in the dialog.</param>
            <param name="labels">A <see cref="T:System.String"/> array indicating what text will appear on each button shown.</param>
            <param name="callBack">An <see cref="T:System.Action"/> that is performed upon closing of the dialog.</param>
            <returns>A new <see cref="T:PVA.NextGen.Core.Messaging.Views.MessageDialogView"/>.</returns>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.MessagingModule">
            <summary>
            MessagingModule.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.MessagingModule.RegisterTypes(Prism.Ioc.IContainerRegistry)">
            <summary>
            Register types with the container that will be used by the application.
            </summary>
            <param name="containerRegistry"><see cref="T:Prism.Ioc.IContainerRegistry"/> used for program-wide type registration.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.MessagingModule.OnInitialized(Prism.Ioc.IContainerProvider)">
            <summary>
            Perform any functionality after all type registration has taken place.
            </summary>
            <param name="containerProvider">A <see cref="T:Prism.Ioc.IContainerProvider"/> used for progam-wide type resolving.</param>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.Services.MessagingService">
            <inheritdoc cref="T:PVA.NextGen.CommonUI.Interfaces.IMessagingService"/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.#ctor(Prism.Services.Dialogs.IDialogService,PVA.NextGen.Common.Interfaces.IFunctionService,PVA.NextGen.Common.Interfaces.ISharedServiceProvider,PVA.NextGen.Common.Interfaces.IShutdownService)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Messaging.Services.MessagingService"/> class.
            </summary>
            <param name="dialogService">The Prism <see cref="T:Prism.Services.Dialogs.IDialogService"/> used to display registered DialogViews in new Windows.</param>
            <param name="functionService">The service used to create new <see cref="T:PVA.NextGen.Common.Interfaces.IFunction"/> objects.</param>
            <param name="sharedServiceProvider">The <see cref="T:PVA.NextGen.Common.Interfaces.ISharedServiceProvider"/> used to access other modules services.</param>
            <param name="shutdownService">Service to handle controlled shutdown of modules.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.AddMessageRegion(System.String,Prism.Regions.IRegion)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ClearRegion(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ShowMessageInDialog(System.String,System.String,System.Action{Prism.Services.Dialogs.IDialogResult})">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ShowCustomMessageInDialog(System.String,System.String,System.String,System.String,System.Boolean[],System.String[],System.Action{Prism.Services.Dialogs.IDialogResult})">
            <summary>
            Show a custom dialog in a new modal RadWindow.
            </summary>
            <param name="title">The <see cref="T:System.String"/> window title for this dialog.</param>
            <param name="message">The <see cref="T:System.String"/> message to display in the dialog.</param>
            <param name="iconData">The <see cref="T:System.String"/> data representing the icon path for this dialog window.</param>
            <param name="iconColor">The <see cref="T:System.String"/> color of the icon for the dialog window.</param>
            <param name="buttons">A <see cref="T:System.Boolean"/> array indicating which buttons are to be displayed in the dialog.</param>
            <param name="labels">A <see cref="T:System.String"/> array indicating what text will appear on each button shown.</param>
            <param name="callBack">An <see cref="T:System.Action"/> that is performed upon completion of the dialog interaction.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ShowViewInDialog(PVA.NextGen.CommonUI.Interfaces.IDialogContentView,System.Action{Prism.Services.Dialogs.IDialogResult})">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ShowMessageInRegion(System.String,System.String,System.String,System.Action{Prism.Services.Dialogs.IDialogResult})">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ShowCustomMessageInRegion(System.String,System.String,System.String,System.String,System.String,System.Boolean[],System.String[],System.Action{Prism.Services.Dialogs.IDialogResult})">
            <summary>
            Show a custom dialog in an existing region.
            </summary>
            <param name="regionName">The <see cref="T:System.String"/> name of the region to inject the dialog into.</param>
            <param name="title">The <see cref="T:System.String"/> window title for this dialog.</param>
            <param name="message">The <see cref="T:System.String"/> message to display in the dialog.</param>
            <param name="iconData">The <see cref="T:System.String"/> data representing the icon path for this dialog window.</param>
            <param name="iconColor">The <see cref="T:System.String"/> color of the icon for the dialog window.</param>
            <param name="buttons">A <see cref="T:System.Boolean"/> array indicating which buttons are to be displayed in the dialog.</param>
            <param name="labels">A <see cref="T:System.String"/> array indicating what text will appear on each button shown.</param>
            <param name="callBack">An <see cref="T:System.Action"/> that is performed upon completion of the dialog injection.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Services.MessagingService.ShowViewInRegion(System.String,PVA.NextGen.CommonUI.Interfaces.IDialogContentView)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel">
            <summary>
            Interaction logic for a Custom Dialog View.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel"/> class.
            </summary>
        </member>
        <member name="E:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.RequestClose">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.CloseDialogCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to close the Dialog.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.Title">
            <summary>
            Gets or sets the title that will be shown in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.IconData">
            <summary>
            Gets or sets the data of the icon that will be displayed in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.IconColor">
            <summary>
            Gets or sets the color of the icon that will be displayed in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.CustomView">
            <summary>
            Gets or sets the <see cref="T:System.Windows.FrameworkElement"/> view to be shown in the dialog.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.CanCloseDialog">
            <summary>
            Determines if the dialog can be closed.
            </summary>
            <returns>True: close the dialog; False: the dialog will not close.</returns>
            <remarks>Does not currently work with RadWindow. Looking into alternative events to utilize.</remarks>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.OnDialogClosed">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel.OnDialogOpened(Prism.Services.Dialogs.IDialogParameters)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel">
            <summary>
            Interaction logic for a Message Dialog View.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel"/> class.
            </summary>
        </member>
        <member name="E:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.RequestClose">
            <inheritdoc/>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.CloseDialogCommand">
            <summary>
            Gets the <see cref="T:Prism.Commands.DelegateCommand"/> used to close the Dialog.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.Title">
            <summary>
            Gets or sets the title that will be shown in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.Message">
            <summary>
            Gets or sets the text body of the Dialog.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.IconData">
            <summary>
            Gets or sets the data of the icon that will be displayed in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.IconColor">
            <summary>
            Gets or sets the color of the icon that will be displayed in the Dialog title bar.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.ButtonLabels">
            <summary>
            Gets or sets a collection of <see cref="T:System.String"/> labels that will appear on the buttons in this dialog.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.Buttons">
            <summary>
            Gets or sets a collection of values indicating which buttons should be shown.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.CanCloseDialog">
            <summary>
            Determines if the dialog can be closed.
            </summary>
            <returns>True: close the dialog; False: the dialog will not close.</returns>
            <remarks>Does not currently work with RadWindow. Looking into alternative events to utilize.</remarks>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.OnDialogClosed">
            <inheritdoc/>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel.OnDialogOpened(Prism.Services.Dialogs.IDialogParameters)">
            <inheritdoc/>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.Views.CustomDialogView">
            <summary>
            Presentation logic for a Custom Dialog View.
            </summary>
            <summary>
            CustomDialogView
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.CustomDialogView.#ctor(PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Messaging.Views.CustomDialogView"/> class.
            </summary>
            <param name="viewModel">The instance of <see cref="T:PVA.NextGen.Core.Messaging.ViewModels.CustomDialogViewModel"/> used for interaction logic.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.CustomDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.Views.MessageDialogView">
            <summary>
            Presentation logic for a Message Dialog View.
            </summary>
            <summary>
            MessageDialogView
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.MessageDialogView.#ctor(PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Messaging.Views.MessageDialogView"/> class.
            </summary>
            <param name="viewModel">The instance of <see cref="T:PVA.NextGen.Core.Messaging.ViewModels.MessageDialogViewModel"/> used for interaction logic.</param>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.MessageDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow">
            <summary>
            An implementation of a Prism <see cref="T:Prism.Services.Dialogs.IDialogWindow"/> for Telerik's RadWindow.
            </summary>
            <summary>
            PopupDialogWindow
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow"/> class.
            </summary>
        </member>
        <member name="E:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.Closed">
            <summary>
            Occurs when the window has just closed.
            </summary>
        </member>
        <member name="E:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.Closing">
            <summary>
            Not currently supported, need to find an equivalent event supported by RadWindow.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.Result">
            <summary>
            Gets or sets the result of the Dialog interaction.
            </summary>
        </member>
        <member name="P:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.Owner">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Window"/> that owns this <see cref="T:Telerik.Windows.Controls.RadWindow"/>.
            </summary>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.ShowDialog">
            <summary>
            Opens a modal Window and returns only when the opened Window has been closed.
            </summary>
            <returns>A nullable <see cref="T:System.Boolean"/> indicating the dialog response. Not used for this implementation.</returns>
        </member>
        <member name="M:PVA.NextGen.Core.Messaging.Views.PopupDialogWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
