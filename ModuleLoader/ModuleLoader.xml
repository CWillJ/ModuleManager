<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModuleLoader</name>
    </assembly>
    <members>
        <member name="T:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever">
            <summary>
            XmlDescriptionRetriever is used to get text form an xml file.
            </summary>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever"/> class.
            </summary>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever"/> class.
            </summary>
            <param name="dllFilePath">The path to the dll file.</param>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.DllFilePath">
            <summary>
            Gets or sets the file path to the dll file.
            </summary>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetModuleDescription(System.Type)">
            <summary>
            GetModuleDescription returns a clean string from the inner xml
            of the class description of the Type.
            </summary>
            <param name="type"><see cref="T:System.Type"/> to get the string desctiption from.</param>
            <returns>String representation of the class description.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetMethodDescription(System.Reflection.MethodInfo,System.Int32)">
            <summary>
            Returns a string from the inner xml of the method description.
            </summary>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/> to get the string from.</param>
            <param name="index">Index used for methods/constructors with same name.</param>
            <returns>String representation of the method description.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetConstructorDescription(System.Reflection.ConstructorInfo,System.Int32)">
            <summary>
            Returns a string from the inner xml of the constructor description.
            </summary>
            <param name="constructor"><see cref="T:System.Reflection.ConstructorInfo"/> to get the string from.</param>
            <param name="index">Index used for methods/constructors with same name.</param>
            <returns>String representation of the method description.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetPropertyDescription(System.Reflection.PropertyInfo)">
            <summary>
            Returns a string from the inner xml of the property desctiption.
            </summary>
            <param name="property"><see cref="T:System.Reflection.PropertyInfo"/> to get the description from.</param>
            <returns>String representation of the property description.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetMemberParameterDescription(System.Reflection.MethodBase,System.Int32,System.Int32)">
            <summary>
            Returns a string from the inner xml of the parameter description.
            </summary>
            <param name="method"><see cref="T:System.Reflection.MemberInfo"/> to get the string from.</param>
            <param name="parameterIndex">Integer index of parameter.</param>
            <param name="memberIndex">Integer index of member.</param>
            <returns>String representation of the parameter description.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetParametersFromList(System.Reflection.MethodBase,System.Int32)">
            <summary>
            Returns an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> from a list of <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
            <param name="method">The <see cref="T:System.Reflection.MethodBase"/> to get the parameters from.</param>
            <param name="memberIndex">Integer index of member.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetMemberReturnDescription(System.Reflection.MethodBase)">
            <summary>
            Returns a string desctiption of the return value of a <see cref="T:System.Reflection.MethodBase"/>.
            </summary>
            <param name="method"><see cref="T:System.Reflection.MethodBase"/> to get the string desctiption of the return value from.</param>
            <returns>String desctiption of the return value.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetParametersFromXml(System.Reflection.MethodBase,System.Int32)">
            <summary>
            Returns an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <param name="method">The <see cref="T:System.Reflection.MethodBase"/> to get parameters from.</param>
            <param name="memberIndex">Member index.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetMemberXmlNode(System.Reflection.MethodBase,System.Int32)">
            <summary>
            Returns an <see cref="T:System.Xml.XmlNode"/> of the specified <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <param name="method">The <see cref="T:System.Reflection.MethodBase"/> to get the <see cref="T:System.Xml.XmlNode"/> from.</param>
            <param name="nodeIndex">The specified node index to handle members with the same name.</param>
            <returns><see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetModuleXmlNode(System.Type)">
            <summary>
            Returns an <see cref="T:System.Xml.XmlNode"/> of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to get the <see cref="T:System.Xml.XmlNode"/> from.</param>
            <returns><see cref="T:System.Xml.XmlNode"/> that holds info about the passed in <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetPropertyXmlNode(System.Reflection.PropertyInfo)">
            <summary>
            Returns an <see cref="T:System.Xml.XmlNode"/> of the specified <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="property">The <see cref="T:System.Reflection.PropertyInfo"/> to get the <see cref="T:System.Xml.XmlNode"/> from.</param>
            <returns><see cref="T:System.Xml.XmlNode"/> that holds info about the passed in <see cref="T:System.Reflection.PropertyInfo"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetXmlNodeString(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            Takes an <see cref="T:System.Xml.XmlNode"/>, string xml tag, and an index and return the inner xml.
            </summary>
            <param name="xmlNode">The member <see cref="T:System.Xml.XmlNode"/>.</param>
            <param name="xmlTag">This is the string of the xml tag.</param>
            <param name="index">Index of the XmlNodeList, defaults to 0. (used for more than one parameter).</param>
            <returns>InnerXml of the <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Classes.XmlDescriptionRetriever.GetXmlNodeText(System.Xml.XmlNode)">
            <summary>
            Returns the formatted text of the inner xml.
            </summary>
            <param name="xmlNode">The <see cref="T:System.Xml.XmlNode"/> to get text from.</param>
            <returns>Formatted string of the <see cref="T:System.Xml.XmlNode"/> InnerXml.</returns>
        </member>
        <member name="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService">
            <summary>
            Retrieves assemblies from dll files.
            </summary>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.CurrentAssemblyName">
            <summary>
            Gets or sets CurrentAssemblyName is the name of the assembly being loaded.
            </summary>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.CurrentTypeName">
            <summary>
            Gets or sets CurrentTypeName is the name of the type being loaded.
            </summary>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.PercentOfAssemblyLoaded">
            <summary>
            Gets or sets the current percentage of load compleation of the current assembly.
            </summary>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.DllDirectory">
            <summary>
            Gets or sets DllDirectory is the directory path of the .dll files.
            </summary>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.Initialize(System.String,System.String)">
            <summary>
            Initialize properties.
            </summary>
            <param name="moduleDirectory">Directory containing dll files.</param>
            <param name="moduleFilePath">Name of the specific dll file.</param>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.GetAssemblies(System.String[])">
            <summary>
            Creates an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to organize
            the information from the dll file and its related xml file.
            </summary>
            <param name="dllFiles">A string array containing the names of all dll files in the DllDirectory.</param>
            <returns>Returns an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.LoadUnload(ModuleManager.ModuleObjects.Classes.AssemblyData@)">
            <summary>
            Loads all enabled <see cref="!:ModuleInfoData"/> and unloads the disabled ones.
            </summary>
            <param name="assembly">An <see cref="!:ModuleInfoData"/> object passed by reference.</param>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.LoadUnload(System.Collections.ObjectModel.ObservableCollection{ModuleManager.ModuleObjects.Classes.AssemblyData}@)">
            <summary>
            Loads all enabled <see cref="!:ModuleInfoData"/> and unloads the disabled ones.
            </summary>
            <param name="assemblies">A <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> passed by reference.</param>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.LoadAll(System.Collections.ObjectModel.ObservableCollection{ModuleManager.ModuleObjects.Classes.AssemblyData}@)">
            <summary>
            Loads all <see cref="!:ModuleInfoData"/> in a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <param name="assemblies">A <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> objects.</param>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.Load(ModuleManager.ModuleObjects.Classes.AssemblyData@)">
            <summary>
            Load an <see cref="!:ModuleInfoData"/>.
            </summary>
            <param name="assembly">Assembly to load passed by reference.</param>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService.Unload(ModuleManager.ModuleObjects.Classes.AssemblyData@)">
            <summary>
            Unload an <see cref="!:ModuleInfoData"/>.
            </summary>
            <param name="assembly"><see cref="!:ModuleInfoData"/> to unload passed by reference.</param>
        </member>
        <member name="T:ModuleManager.ModuleLoader.Services.AssemblyLoaderService">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModuleManager.ModuleLoader.Services.AssemblyLoaderService"/> class.
            </summary>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.DllDirectory">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.DllFilePath">
            <summary>
            Gets or sets DllFilePath is the path of the .dll file.
            </summary>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.CurrentAssemblyName">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.CurrentTypeName">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.PercentOfAssemblyLoaded">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="P:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.DescriptionRetriever">
            <summary>
            Gets or sets all xml descriptions.
            </summary>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.Initialize(System.String,System.String)">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.GetAssemblies(System.String[])">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.LoadUnload(ModuleManager.ModuleObjects.Classes.AssemblyData@)">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.LoadUnload(System.Collections.ObjectModel.ObservableCollection{ModuleManager.ModuleObjects.Classes.AssemblyData}@)">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.LoadAll(System.Collections.ObjectModel.ObservableCollection{ModuleManager.ModuleObjects.Classes.AssemblyData}@)">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.Load(ModuleManager.ModuleObjects.Classes.AssemblyData@)">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.Unload(ModuleManager.ModuleObjects.Classes.AssemblyData@)">
            <inheritdoc cref="T:ModuleManager.ModuleLoader.Interfaces.IAssemblyLoaderService"/>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.GetSingleModule(System.Type)">
            <summary>
            Builds a singls module from the given Type.
            </summary>
            <param name="type">Type from an assembly.</param>
            <returns>A Module type.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.AddConstructorsToCollection(System.Type)">
            <summary>
            AddConstructorsToCollection get all constructors from a Type.
            </summary>
            <param name="type">The Type where the members are coming from.</param>
            <returns>An ObservableCollection of ModuleConstructor objects.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.AddPropertiesToCollection(System.Type)">
            <summary>
            AddPropertiesToCollection gets all properties from the passed in Type.
            </summary>
            <param name="type">The Type where the members are coming from.</param>
            <returns>An ObservableCollection of ModulePropery objects.</returns>
        </member>
        <member name="M:ModuleManager.ModuleLoader.Services.AssemblyLoaderService.AddMethodsToCollection(System.Type)">
            <summary>
            AddMethodsToCollection gets all methods from the passed in Type.
            </summary>
            <param name="type">The Type where the methods are coming from.</param>
            <returns>An ObservableCollection of ModuleMethod objects.</returns>
        </member>
    </members>
</doc>
